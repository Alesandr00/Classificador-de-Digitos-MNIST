modelo.eval()  # Coloca o modelo em modo de avaliação (desativa dropout, etc.)

# Variáveis para calcular a acurácia
acertos = 0
total = 0

with torch.no_grad():  # Desativa o cálculo de gradientes durante a avaliação, economiza memória e tempo de processamento durante a avaliação
    for imagens, labels in testloader:
        # Passar as imagens pela rede
        saida = modelo(imagens)

        # Obter as previsões (índice do maior valor em cada linha)
        _, previsao = torch.max(saida, 1)

        # Comparar previsões com os rótulos
        acertos += (previsao == labels).sum().item()
        total += labels.size(0)

# Calcular a acurácia
acuracia = (acertos / total) * 100
print(f"Acurácia no conjunto de teste: {acuracia:.2f}%")
